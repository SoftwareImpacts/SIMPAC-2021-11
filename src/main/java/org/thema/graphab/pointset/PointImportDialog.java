/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PointImportDialog.java
 *
 * Created on 10 juin 2010, 06:14:40
 */

package org.thema.graphab.pointset;

import au.com.bytecode.opencsv.CSVReader;
import com.vividsolutions.jts.geom.Geometry;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.geotools.data.shapefile.ShapefileDataStore;
import org.opengis.feature.type.AttributeType;

/**
 *
 * @author gvuidel
 */
public class PointImportDialog extends javax.swing.JDialog {

    public boolean isOk = false;

    public File file;
    public boolean shpFile;
    public String idAttr, xAttr, yAttr;
    public List<String> zAttrs;

    /** Creates new form PointImportDialog */
    public PointImportDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        setLocationRelativeTo(parent);
        getRootPane().setDefaultButton(okButton);
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        selectFilePanel = new org.thema.common.swing.SelectFilePanel();
        idComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        yComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        xComboBox = new javax.swing.JComboBox();
        multipleSelectionPanel = new org.thema.common.swing.MultipleSelectionPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/thema/graphab/Bundle"); // NOI18N
        setTitle(bundle.getString("PointImportDialog.title")); // NOI18N

        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("org/thema/graphab/pointset/Bundle"); // NOI18N
        okButton.setText(bundle1.getString("PointImportDialog.okButton.text")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(bundle1.getString("PointImportDialog.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        selectFilePanel.setDescription(bundle1.getString("PointImportDialog.selectFilePanel.description")); // NOI18N
        selectFilePanel.setFileDesc(bundle1.getString("PointImportDialog.selectFilePanel.fileDesc")); // NOI18N
        selectFilePanel.setFileExts(bundle1.getString("PointImportDialog.selectFilePanel.fileExts")); // NOI18N
        selectFilePanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFilePanelActionPerformed(evt);
            }
        });

        jLabel1.setText(bundle1.getString("PointImportDialog.jLabel1.text")); // NOI18N

        jLabel2.setText(bundle1.getString("PointImportDialog.jLabel2.text")); // NOI18N

        jLabel3.setText(bundle1.getString("PointImportDialog.jLabel3.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(multipleSelectionPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton))
                    .add(selectFilePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(idComboBox, 0, 125, Short.MAX_VALUE)
                        .add(18, 18, 18)
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(xComboBox, 0, 125, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(yComboBox, 0, 127, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(new java.awt.Component[] {cancelButton, okButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(selectFilePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(idComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(xComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(yComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(multipleSelectionPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        file = selectFilePanel.getSelectedFile();
        idAttr = idComboBox.getSelectedItem().toString();
        if(!shpFile) {
            xAttr = xComboBox.getSelectedItem().toString();
            yAttr = yComboBox.getSelectedItem().toString();
        }
        zAttrs = multipleSelectionPanel.getSelectedItems();

        isOk = true;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void selectFilePanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFilePanelActionPerformed
        File f = selectFilePanel.getSelectedFile();
        shpFile = f.getName().toLowerCase().endsWith(".shp");

        xComboBox.setEnabled(!shpFile);
        yComboBox.setEnabled(!shpFile);

        List<String> attrs = new ArrayList<String>();
        try {
            if(shpFile) {
                ShapefileDataStore datastore = new ShapefileDataStore(f.toURL());
                List<AttributeType> types = datastore.getSchema().getTypes();
                DefaultComboBoxModel model = new DefaultComboBoxModel();
                for(AttributeType type : types)
                    if(Geometry.class.isAssignableFrom(type.getBinding())) {
                        if(!type.getBinding().getName().endsWith("Point")) {
                            selectFilePanel.setSelectedFile(null);
                            JOptionPane.showMessageDialog(this, "Geometry type must be Point or MultiPoint.");
                            return;
                        }
                    } else {
                        model.addElement(type.getName().getLocalPart());
                        if(Number.class.isAssignableFrom(type.getBinding()))
                            attrs.add(type.getName().getLocalPart());
                    }

                idComboBox.setModel(model);
                datastore.dispose();
            } else {
                CSVReader r = new CSVReader(new FileReader(f));
                String [] header = r.readNext();
                r.close();
                idComboBox.setModel(new DefaultComboBoxModel(header));
                xComboBox.setModel(new DefaultComboBoxModel(header));
                yComboBox.setModel(new DefaultComboBoxModel(header));
                attrs = Arrays.asList(header);
            }

            multipleSelectionPanel.setItems(attrs.toArray());
        } catch(Exception ex) {
            Logger.getLogger(PointImportDialog.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "An error occured !\n" + ex.getLocalizedMessage());
        }

}//GEN-LAST:event_selectFilePanelActionPerformed

    /** Closes the dialog */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox idComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private org.thema.common.swing.MultipleSelectionPanel multipleSelectionPanel;
    private javax.swing.JButton okButton;
    private org.thema.common.swing.SelectFilePanel selectFilePanel;
    private javax.swing.JComboBox xComboBox;
    private javax.swing.JComboBox yComboBox;
    // End of variables declaration//GEN-END:variables

}
